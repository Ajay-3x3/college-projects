PROJECT SYNOPSIS
On
Traffic lights controller using Arduino
ABSTRACT: -
The use of private vehicles is extremely common and as a result, the quantity of vehicles on the roads area unit exponentially increasing. 
Roads with none direction or steering will lead in to traffic congestions and accidents.
Traffic Lights or Traffic Signals area unit signalling devices that area unit accustomed management the flow of traffic. 
Generally, they're positioned at junctions, intersections, ‘X’ roads, pedestrian crossings etc.
The traffic lights can offer directions to the users (drivers and pedestrians) by displaying lights of normal colour. 
The 3 colours utilized in traffic lights area unit Red, Yellow and green.
The system should be accustomed management the traffic lights for swish and safe movement of traffic. 
These management systems include electro mechanical controllers with mechanism mechanisms or trendy solid-state processed systems with simple setup and maintenance.
In this project, associate degree Arduino based mostly traffic signal Controller system is meant. 
it's a straightforward implementation of traffic lights system however is extended to a true time system with programmable timings, pedestrian lighting etc.






Software Requirements: -
Arduino IDE


Hardware Requirements: -
Arduino uno
Breadboard 
LEDs
Wires
Resistors

note- this project is for 4 way traffic signal.
CODE:-
Initializing the LED pins to the respective pins in Arduino Uno. 
int r1 = 1;
int y1 = 2;
int g1 = 3;
int r2 = 4;
int y2 = 5;
int g2 = 6;
int r3 = 7;
int y3 = 8;
int g3 = 9;
int r4 = 10;
int y4 = 11;
int g4 = 12;
Then in the setup function, we declared all the pins as output so that we can control these with the Arduino.
void setup()   
 {   
pinMode (r1, OUTPUT);     //signal 1
pinMode (y1, OUTPUT);
pinMode (g1, OUTPUT);
pinMode (r2, OUTPUT);    //signal 2
pinMode (y2, OUTPUT);
pinMode (g2, OUTPUT);
pinMode (r3, OUTPUT);   //signal 3
pinMode (y3, OUTPUT);
pinMode (g3, OUTPUT);
pinMode (r4, OUTPUT);   //signal 4
pinMode (y4, OUTPUT);
pinMode (g4, OUTPUT);    
 }
In the loop function, we controlled the signal one by one to control the flow of traffic.
void loop()  
  {            // Making Green  LED at signal 1 and red LED's 		    at other signal HIGH
digitalWrite(g1, HIGH);
digitalWrite(r2, HIGH);
digitalWrite(r3, HIGH);
digitalWrite(r4, HIGH);
delay(9000); // Making Green LED at signal 1 LOW and making 
		yellow LED at signal 1 HIGH for 3 seconds
digitalWrite(g1, LOW);
digitalWrite(r2, LOW);
digitalWrite(y1, HIGH);
digitalWrite(y2, HIGH);
delay(3000);  // Making Green  LED at signal 2 and red LED's at 			other signal HIGH
digitalWrite(y1, LOW);
digitalWrite(y2, LOW);
digitalWrite(r1, HIGH);
digitalWrite(g2, HIGH);
digitalWrite(r3, HIGH);
delay(9000); // Making Green LED at signal 2 LOW and making 
		yellow LED at signal 2 HIGH for 3 seconds
digitalWrite(g2, LOW);
digitalWrite(r3, LOW);
digitalWrite(y2, HIGH);
digitalWrite(y3, HIGH);
delay(3000); // Making Green  LED at signal 3 and red LED's at 			other signal HIGH
digitalWrite(y2, LOW);
digitalWrite(y3, LOW);
digitalWrite(r2, HIGH);
digitalWrite(g3, HIGH);
digitalWrite(r4, HIGH);
delay(9000); // Making Green LED at signal 3 LOW and making 
		yellow LED at signal 3 HIGH for 3 seconds
digitalWrite(g3, LOW);
digitalWrite(r4, LOW);
digitalWrite(y3, HIGH);
digitalWrite(y4, HIGH);
delay(3000); // Making Green  LED at signal 4 and red LED's at 			other signal HIGH
digitalWrite(y3, LOW);
digitalWrite(y4, LOW);
digitalWrite(r3, HIGH);
digitalWrite(g4, HIGH);
delay(9000); // Making Green LED at signal 4 LOW and making 
		yellow	 LED at signal 4 HIGH for 3 seconds
digitalWrite(r3, LOW);
digitalWrite(g4, LOW);
digitalWrite(r1, LOW);
digitalWrite(y1, HIGH);
digitalWrite(y4, HIGH);
delay(3000);
digitalWrite(y1, LOW);
digitalWrite(y4, LOW);  
   } 
